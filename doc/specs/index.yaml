openapi: 3.0.1
info:
  title: さくらみこ クイズAPI
  description: さくらみこのクイズアプリのDB管理用のIFを提供します
  version: v1
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: /miko/v1/login/
  description: 管理用ページ向けの認証を行うAPI
- name: /miko/v1/client/
  description: 一般利用者側向けのクイズAPI
- name: /miko/v1/admin/
  description: クイズ管理用のAPI
paths:
  /miko/v1/admin/quizzes/{quizId}:
    put:
      tags:
      - /miko/v1/admin/
      summary: クイズの更新を行う
      operationId: updateQuiz
      parameters:
      - name: quizId
        in: path
        required: true
        $ref: '#/components/parameters/quizId'
        schema:
          minimum: 1
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizUpdateRequestForm'
        required: true
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "204":
          $ref: '#/components/responses/updatedSuccessfully'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "403":
          $ref: '#/components/responses/forbidden'
    delete:
      tags:
      - /miko/v1/admin/
      summary: クイズの削除を行う
      operationId: deleteQuiz
      parameters:
      - name: quizId
        in: path
        required: true
        $ref: '#/components/parameters/quizId'
        schema:
          minimum: 1
          type: integer
          format: int64
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "201":
          $ref: '#/components/responses/insertedSuccessfully'
        "403":
          $ref: '#/components/responses/forbidden'
  /miko/v1/login/:
    post:
      tags:
      - /miko/v1/login/
      summary: 管理者用ページへ遷移するためのログイン処理を行う
      operationId: isLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
        required: true
      responses:
        "200":
          description: ログインに成功した
        "401":
          $ref: '#/components/responses/loginFailure'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
  /miko/v1/client/quizzes:
    get:
      tags:
      - /miko/v1/client/
      summary: クイズの一覧を取得する
      operationId: fetchQuiz
      parameters:
      - name: count
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "200":
          description: クイズ一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizQuestionListResponse'
        "403":
          $ref: '#/components/responses/forbidden'
    post:
      tags:
      - /miko/v1/client/
      summary: クイズの追加リクエストを行う
      operationId: quizRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizAddRequestForm'
        required: true
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "201":
          $ref: '#/components/responses/insertedSuccessfully'
        "403":
          $ref: '#/components/responses/forbidden'
  /miko/v1/admin/quizzes:
    get:
      tags:
      - /miko/v1/admin/
      summary: クイズの一覧を取得する(管理用)
      operationId: fetchQuiz_1
      parameters:
      - name: start
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: count
        in: query
        required: false
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: クイズ一覧(管理用)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizManageListResponse'
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "403":
          $ref: '#/components/responses/forbidden'
    post:
      tags:
      - /miko/v1/admin/
      summary: クイズの追加を行う
      operationId: addQuiz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizAddRequestForm'
        required: true
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "404":
          $ref: '#/components/responses/quizNotFound'
        "201":
          $ref: '#/components/responses/insertedSuccessfully'
        "403":
          $ref: '#/components/responses/forbidden'
  /miko/v1/admin/quizzes/requests:
    get:
      tags:
      - /miko/v1/admin/
      summary: リクエスト中のクイズ一覧を取得する
      operationId: fetchQuizRequest
      parameters:
      - name: start
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: count
        in: query
        required: false
        schema:
          maximum: 50
          minimum: 0
          type: integer
          format: int32
          default: 20
      responses:
        "500":
          $ref: '#/components/responses/internalServerError'
        "400":
          $ref: '#/components/responses/badRequest'
        "401":
          $ref: '#/components/responses/unauthorized'
        "403":
          $ref: '#/components/responses/forbidden'
        "200":
          description: リクエスト中のクイズ一覧
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizManageListResponse'
        "404":
          $ref: '#/components/responses/requestQuizNotFound'
components:
  schemas:
    QuizUpdateRequestForm:
      required:
      - answer
      - commentary
      - question
      - quizId
      type: object
      properties:
        question:
          maxLength: 200
          minLength: 0
          type: string
          description: 問題文
          example: さくらみこの挨拶といえば？
        commentary:
          maxLength: 200
          minLength: 0
          type: string
          description: 解説文
          example: さくらみこの挨拶はにゃっはろー
        quizId:
          type: integer
          description: クイズID
          format: int64
          example: 1
        answer:
          $ref: '#/components/schemas/UpdateAnswer'
      description: クイズ更新リクエスト
    UpdateAnswer:
      required:
      - answer1
      - answer2
      - answer3
      - answer4
      - correctNumber
      type: object
      properties:
        answer1:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答1
          example: にゃっはろー
        answer2:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答2
          example: こんこんきーつね
        answer3:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答3
          example: こんやっぴー
        answer4:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答4
          example: ゆびゆびー
        correctNumber:
          type: integer
          description: 正答番号 1から4のいずれかの数字を設定
          format: int32
          example: 1
      description: 回答更新リクエスト
    LoginForm:
      required:
      - accountId
      - password
      type: object
      properties:
        accountId:
          maxLength: 12
          minLength: 0
          type: string
          description: アカウントID
        password:
          type: string
          description: パスワード
      description: ログインリクエスト
    AddAnswer:
      required:
      - answer1
      - answer2
      - answer3
      - answer4
      - correctNumber
      type: object
      properties:
        answer1:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答1
          example: にゃっはろー
        answer2:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答2
          example: こんこんきーつね
        answer3:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答3
          example: こんやっぴー
        answer4:
          maxLength: 50
          minLength: 0
          type: string
          description: 回答4
          example: ゆびゆびー
        correctNumber:
          type: integer
          description: 正答番号 1から4のいずれかの数字を設定
          format: int32
          example: 1
      description: 回答追加リクエスト
    QuizAddRequestForm:
      required:
      - answer
      - commentary
      - question
      type: object
      properties:
        question:
          maxLength: 200
          minLength: 0
          type: string
          description: 問題文
          example: さくらみこの挨拶といえば？
        commentary:
          maxLength: 200
          minLength: 0
          type: string
          description: 解説文
          example: さくらみこの挨拶はにゃっはろー
        answer:
          $ref: '#/components/schemas/AddAnswer'
      description: クイズ追加リクエスト
    QuizQuestionListResponse:
      required:
      - count
      - quizList
      type: object
      properties:
        count:
          maximum: 100
          minimum: 10
          type: integer
          description: 取得件数
          format: int32
          example: 10
        quizList:
          type: array
          description: クイズ問題一覧
          items:
            $ref: '#/components/schemas/QuizQuestionResponse.QuizQuestion'
      description: クイズ問題取得結果
    QuizQuestionResponse.QuizQuestion:
      required:
      - commentary
      - question
      - quizId
      - quizManageAnswer
      - quizStatus
      type: object
      properties:
        quizId:
          type: integer
          description: クイズID
          format: int64
          example: 1
        question:
          type: string
          description: 問題文
          example: さくらみこの挨拶といえば？
        commentary:
          type: string
          description: 解説文
          example: さくらみこの挨拶はにゃっはろー
        quizStatus:
          type: string
          description: クイズの状態
          example: enabled
        quizManageAnswer:
          $ref: "#/components/schemas/QuizQuestionResponse.QuizQuestion,QuizAnswer"
      description: クイズ一覧取得結果
    QuizQuestionResponse.QuizQuestion,QuizAnswer:
      required:
      - answer1
      - answer2
      - answer3
      - answer4
      - answerId
      - correctNumber
      type: object
      properties:
        answerId:
          type: integer
          description: 回答ID
          format: int64
          example: 1
        answer1:
          type: string
          description: 回答1
          example: にゃっはろー
        answer2:
          type: string
          description: 回答2
          example: こんこんきーつね
        answer3:
          type: string
          description: 回答3
          example: こんやっぴー
        answer4:
          type: string
          description: 回答4
          example: ゆびゆびー
        correctNumber:
          type: integer
          description: 正答番号 1から4の数字
          format: int32
          example: 1
      description: クイズの管理用回答情報
    QuizManageListResponse:
      required:
      - count
      - quizList
      - start
      - total
      type: object
      properties:
        total:
          type: integer
          description: 総件数
          format: int64
          example: 10
        start:
          minimum: 1
          type: integer
          description: 取得開始位置
          format: int64
          example: 10
        count:
          maximum: 100
          minimum: 10
          type: integer
          description: 取得件数
          format: int32
          example: 10
        quizList:
          type: array
          description: クイズ問題一覧
          items:
            $ref: '#/components/schemas/QuizQuestionResponse.QuizQuestion'
      description: クイズ管理用情報取得結果
    ProblemResponse:
      type: object
      properties:
        type:
          type: string
          description: "問題のタイプを識別するURI[RFC3986]"
          format: uri
          example: about:blank
        title:
          type: string
          description: 問題の要素
          example: リソースが見つかりません
        status:
          type: integer
          description: HTTPレスポンスコード
          format: int32
          example: 404
        detail:
          type: string
          description: 問題の詳細
          example: 指定されたクイズが見つかりません
      description: RFC7807準拠のエラー詳細
  responses:
    badRequest:
      description: リクエストパラメータが不正
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"リクエストされたパラメータは正しくありません\"\
            ,\"status\":400,\"detail\":\"questionは必須項目です\"}"
    unauthorized:
      description: 認証情報がリクエストに付与されていない
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"認証に失敗しました\",\"status\":401,\"\
            detail\":\"認証情報が付与されていません\"}"
    loginFailure:
      description: ログインに失敗
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"認証に失敗しました\",\"status\":401,\"\
            detail\":\"IDまたはパスワードに誤りがあります\"}"
    forbidden:
      description: 許可されていないアクセス
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"アクセスが拒否されました\",\"status\"\
            :403,\"detail\":\"アクセスする権限がありません\"}"
    quizNotFound:
      description: クイズが見つからない
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"リクエストされたリソースは見つかりませんでした\"\
            ,\"status\":404,\"detail\":\"クイズが見つかりませんでした\"}"
    requestQuizNotFound:
      description: リクエスト中のクイズが見つからない
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"リクエストされたリソースは見つかりませんでした\"\
            ,\"status\":404,\"detail\":\"リクエスト中のクイズは存在しません\"}"
    internalServerError:
      description: 処理が正常に終了しなかった
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemResponse'
          example: "{\"type\":\"about:blank\",\"title\":\"リクエストされた操作を完了できませんでした\"\
            ,\"status\":500,\"detail\":\"データベースでエラーが発生しました\"}"
    insertedSuccessfully:
      description: 正常に追加できた
    updatedSuccessfully:
      description: 正常に更新できた
    deletedSuccessfully:
      description: 正常に削除できた
  parameters:
    quizId:
      name: quizId
      in: path
      description: クイズID
      required: true
      style: simple
      schema:
        minimum: 1
        type: integer
        format: int64
